#BlueJ class context
comment0.target=SortedMap
comment1.params=
comment1.target=SortedMap()
comment10.params=newNode\ currentNode\ parentNode
comment10.target=void\ insertNode(SortedMapNode,\ SortedMapNode,\ SortedMapNode)
comment11.params=sortedMap
comment11.target=void\ addAll(SortedMap)
comment12.params=
comment12.target=java.lang.Object\ removeSmallestValue()
comment13.params=
comment13.target=java.lang.Object\ removeLargestValue()
comment14.params=key
comment14.target=void\ remove(java.lang.Object)
comment15.params=key\ currentNode\ parentNode
comment15.target=void\ removeKey(java.lang.Object,\ SortedMapNode,\ SortedMapNode)
comment16.params=currentNode\ parentNode
comment16.target=void\ removeNode(SortedMapNode,\ SortedMapNode)
comment17.params=currentNode\ parentNode
comment17.target=SortedMapNode\ findSmallest(SortedMapNode,\ SortedMapNode)
comment18.params=sortedMap
comment18.target=void\ removeAll(SortedMap)
comment19.params=key\ newValue
comment19.target=void\ replace(java.lang.Object,\ java.lang.Object)
comment2.params=sortedMap
comment2.target=SortedMap(SortedMap)
comment20.params=
comment20.target=void\ clear()
comment3.params=
comment3.target=int\ getSize()
comment4.params=
comment4.target=boolean\ isEmpty()
comment5.params=
comment5.target=java.lang.Object\ getSmallestValue()
comment6.params=
comment6.target=java.lang.Object\ getLargestValue()
comment7.params=key
comment7.target=boolean\ contains(java.lang.Object)
comment8.params=keyArray
comment8.target=boolean\ containsAll(java.lang.Object[])
comment9.params=key\ value
comment9.target=void\ add(java.lang.Object,\ java.lang.Object)
numComments=21
